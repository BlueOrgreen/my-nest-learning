/* eslint-disable */
export default async () => {
    const t = {
        ["./modules/content/entities/category.entity"]: await import("./modules/content/entities/category.entity"),
        ["./modules/content/entities/post.entity"]: await import("./modules/content/entities/post.entity"),
        ["./modules/content/entities/comment.entity"]: await import("./modules/content/entities/comment.entity"),
        ["./modules/content/constants"]: await import("./modules/content/constants"),
        ["./modules/content/entities/tag.entity"]: await import("./modules/content/entities/tag.entity"),
        ["./modules/database/constants"]: await import("./modules/database/constants")
    };
    return { "@nestjs/swagger": { "models": [[import("./modules/restful/dtos/delete.dto"), { "DeleteDto": { ids: { required: true, type: () => [String] } } }], [import("./modules/restful/dtos/delete-with-trash.dto"), { "DeleteWithTrashDto": { trash: { required: false, type: () => Boolean, description: "\u662F\u5426\u8F6F\u5220\u9664" } } }], [import("./modules/restful/dtos/restore.dto"), { "RestoreDto": { ids: { required: true, type: () => [String], description: "\u5F85\u6062\u590D\u6570\u636E\u7684ID\u5217\u8868\u00B7" } } }], [import("./modules/content/entities/category.entity"), { "CategoryEntity": { id: { required: true, type: () => String }, name: { required: true, type: () => String }, customOrder: { required: true, type: () => Number }, depth: { required: true, type: () => Object, default: 0 }, parent: { required: true, type: () => t["./modules/content/entities/category.entity"].CategoryEntity, nullable: true }, children: { required: true, type: () => [t["./modules/content/entities/category.entity"].CategoryEntity] }, posts: { required: true, type: () => [t["./modules/content/entities/post.entity"].PostEntity] }, deletedAt: { required: true, type: () => Date } } }], [import("./modules/content/entities/comment.entity"), { "CommentEntity": { id: { required: true, type: () => String }, body: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, depth: { required: true, type: () => Object, default: 0 }, parent: { required: true, type: () => t["./modules/content/entities/comment.entity"].CommentEntity, nullable: true }, children: { required: true, type: () => [t["./modules/content/entities/comment.entity"].CommentEntity] }, post: { required: true, type: () => t["./modules/content/entities/post.entity"].PostEntity } } }], [import("./modules/content/entities/tag.entity"), { "TagEntity": { id: { required: true, type: () => String }, name: { required: true, type: () => String }, description: { required: false, type: () => String }, deletedAt: { required: true, type: () => Date }, postCount: { required: true, type: () => Number, description: "\u901A\u8FC7queryBuilder\u751F\u6210\u7684\u6587\u7AE0\u6570\u91CF(\u865A\u62DF\u5B57\u6BB5)" }, posts: { required: true, type: () => [t["./modules/content/entities/post.entity"].PostEntity] } } }], [import("./modules/content/entities/post.entity"), { "PostEntity": { id: { required: true, type: () => String }, title: { required: true, type: () => String }, body: { required: true, type: () => String }, summary: { required: false, type: () => String }, keywords: { required: false, type: () => [String] }, type: { required: true, enum: t["./modules/content/constants"].PostBodyType }, publishedAt: { required: false, type: () => Date, nullable: true }, customOrder: { required: true, type: () => Number }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, commentCount: { required: true, type: () => Number, description: "\u901A\u8FC7queryBuilder\u751F\u6210\u7684\u8BC4\u8BBA\u6570\u91CF(\u865A\u62DF\u5B57\u6BB5)" }, category: { required: true, type: () => t["./modules/content/entities/category.entity"].CategoryEntity }, tags: { required: true, type: () => [t["./modules/content/entities/tag.entity"].TagEntity] }, comments: { required: true, type: () => [t["./modules/content/entities/comment.entity"].CommentEntity] }, deletedAt: { required: true, type: () => Date } } }], [import("./modules/content/dtos/category.dto"), { "QueryCategoryTreeDto": { trashed: { required: false, enum: t["./modules/database/constants"].SelectTrashMode } }, "QueryCategoryDto": { page: { required: true, type: () => Object, default: 1, minimum: 1 }, limit: { required: true, type: () => Object, default: 10, minimum: 1 } }, "CreateCategoryDto": { name: { required: true, type: () => String, maxLength: 25 }, parent: { required: false, type: () => String }, customOrder: { required: true, type: () => Object, default: 0, minimum: 0 } }, "UpdateCategoryDto": { id: { required: true, type: () => String } } }], [import("./modules/restful/dtos/paginate.dto"), { "PaginateDto": { page: { required: true, type: () => Number, description: "\u5F53\u524D\u9875", default: 1, minimum: 1 }, limit: { required: true, type: () => Number, description: "\u6BCF\u9875\u6570\u636E\u91CF", default: 10, minimum: 1 } }, "PaginateWithTrashedDto": { trashed: { required: false, description: "\u6839\u636E\u8F6F\u5220\u9664\u72B6\u6001\u67E5\u8BE2", enum: t["./modules/database/constants"].SelectTrashMode } } }], [import("./modules/content/dtos/post.dto"), { "QueryPostDto": { isPublished: { required: false, type: () => Boolean }, orderBy: { required: false, enum: t["./modules/content/constants"].PostOrderType }, page: { required: true, type: () => Object, default: 1, minimum: 1 }, limit: { required: true, type: () => Object, default: 10, minimum: 1 }, category: { required: false, type: () => String }, tag: { required: false, type: () => String }, trashed: { required: false, enum: t["./modules/database/constants"].SelectTrashMode }, search: { required: false, type: () => String, maxLength: 100 } }, "CreatePostDto": { title: { required: true, type: () => String, maxLength: 255 }, body: { required: true, type: () => String }, summary: { required: false, type: () => String, maxLength: 500 }, publishedAt: { required: false, type: () => Date }, keywords: { required: false, type: () => [String], maxLength: 20 }, customOrder: { required: true, type: () => Object, default: 0, minimum: 0 }, category: { required: true, type: () => String, description: "\u6570\u636E\u5173\u8054\u4E0E\u6811\u5F62\u5D4C\u5957\u7ED3\u6784" }, tags: { required: false, type: () => [String] } }, "UpdatePostDto": { id: { required: true, type: () => String, description: "\u5F85\u66F4\u65B0ID" } } }], [import("./modules/content/dtos/comment.dto"), { "QueryCommentDto": { post: { required: false, type: () => String }, page: { required: true, type: () => Object, default: 1, minimum: 1 }, limit: { required: true, type: () => Object, default: 10, minimum: 1 } }, "QueryCommentTreeDto": {}, "CreateCommentDto": { body: { required: true, type: () => String, maxLength: 1000 }, post: { required: true, type: () => String }, parent: { required: false, type: () => String } } }], [import("./modules/content/dtos/tag.dto"), { "QueryTagDto": { page: { required: true, type: () => Object, default: 1, minimum: 1 }, limit: { required: true, type: () => Object, default: 10, minimum: 1 }, trashed: { required: false, enum: t["./modules/database/constants"].SelectTrashMode } }, "CreateTagDto": { name: { required: true, type: () => String, maxLength: 255 }, description: { required: false, type: () => String, maxLength: 500 } }, "UpdateTagDto": { id: { required: true, type: () => String } } }]], "controllers": [[import("./modules/content/controllers/post.controller"), { "PostController": { "list": { type: Object }, "detail": { type: t["./modules/content/entities/post.entity"].PostEntity }, "store": { type: t["./modules/content/entities/post.entity"].PostEntity }, "update": { type: t["./modules/content/entities/post.entity"].PostEntity }, "delete": { type: [t["./modules/content/entities/post.entity"].PostEntity] }, "restore": { type: [t["./modules/content/entities/post.entity"].PostEntity] } } }], [import("./modules/content/controllers/tag.controller"), { "TagController": { "list": {}, "detail": { type: t["./modules/content/entities/tag.entity"].TagEntity }, "store": { type: t["./modules/content/entities/tag.entity"].TagEntity }, "update": { type: t["./modules/content/entities/tag.entity"].TagEntity }, "delete": { type: [t["./modules/content/entities/tag.entity"].TagEntity] }, "restore": { type: [t["./modules/content/entities/tag.entity"].TagEntity] } } }], [import("./modules/content/controllers/category.controller"), { "CategoryController": { "tree": { type: [t["./modules/content/entities/category.entity"].CategoryEntity] }, "list": {}, "detail": { type: t["./modules/content/entities/category.entity"].CategoryEntity }, "store": { type: t["./modules/content/entities/category.entity"].CategoryEntity }, "update": { type: t["./modules/content/entities/category.entity"].CategoryEntity }, "delete": { type: [t["./modules/content/entities/category.entity"].CategoryEntity] }, "restore": { type: [t["./modules/content/entities/category.entity"].CategoryEntity] } } }], [import("./modules/content/controllers/comment.controller"), { "CommentController": { "tree": { type: [t["./modules/content/entities/comment.entity"].CommentEntity] }, "list": {}, "store": { type: t["./modules/content/entities/comment.entity"].CommentEntity }, "delete": { type: [t["./modules/content/entities/comment.entity"].CommentEntity] } } }]] } };
};